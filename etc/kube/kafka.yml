kind: Deployment
apiVersion: apps/v1
metadata:
  name: kafka
  namespace: default
  labels:
    app.kubernetes.io/part-of: infra
    app: kafka
spec:
  selector:
    matchLabels:
      app: kafka
  replicas: 1
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: kafka
    spec:
      volumes:
        - name: kafka-volume
          persistentVolumeClaim:
            claimName: kafka-volume
      containers:
        - resources: {}
          terminationMessagePath: /dev/termination-log
          name: kafka
          env:
            - name: ALLOW_PLAINTEXT_LISTENER
              value: "yes"
            - name: KAFKA_CFG_ZOOKEEPER_CONNECT
              value: zookeeper:2181
            - name: KAFKA_CFG_LISTENERS
              value: PLAINTEXT://:9092
            - name: BRDEBUG
              value: '1'
            - name: KAFKA_CFG_BROKER_ID
              value: '0'
            - name: KAFKA_KRAFT_CLUSTER_ID
              value: 'cluster_2023'
          ports:
            - containerPort: 9092
              protocol: TCP
          imagePullPolicy: Always
          volumeMounts:
            - name: kafka-volume
              mountPath: /bitnami
          terminationMessagePolicy: File
          image: >-
            docker.io/bitnami/kafka:3.5
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler