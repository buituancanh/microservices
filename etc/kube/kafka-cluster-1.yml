kind: Deployment
apiVersion: apps/v1
metadata:
  name: kafka-cluster
  namespace: default
  labels:
    app.kubernetes.io/part-of: infra
    app: kafka-cluster
spec:
  selector:
    matchLabels:
      app: kafka-cluster
  replicas: 1
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: kafka-cluster
    spec:
      volumes:
        - name: kafka-volume
          persistentVolumeClaim:
            claimName: kafka-volume
      containers:
        - resources: {}
          terminationMessagePath: /dev/termination-log
          name: kafka-cluster
          env:
            - name: KAFKA_BROKER_ID
              value: "1"
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: "zookeeper:2181"
            - name: KAFKA_ADVERTISED_LISTENERS
              value: "PLAINTEXT://kafka-cluster:9092,PLAINTEXT_HOST://localhost:29092"
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: "PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: "PLAINTEXT"
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "1"
          ports:
            - containerPort: 29092
              protocol: TCP
            - containerPort: 9092
              protocol: TCP
          imagePullPolicy: Always
          volumeMounts:
            - name: kafka-volume
              mountPath: /bitnami
          terminationMessagePolicy: File
          image: >-
            confluentinc/cp-kafka:latest
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler